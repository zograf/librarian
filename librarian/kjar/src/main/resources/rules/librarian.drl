package rules;

import com.librarian.model.*;
import java.util.List;


rule "Find parent with the most occurrences"
agenda-group "main"
salience 96
    when
        $rp : RecommendingPreferences($list : up.additionalSubjects)
        $groupedSubjects : List() from collect(Subject() from $list)
        $maxParent : String() from getMaxParent($groupedSubjects)
    then
        insert(new Flag($maxParent, $rp));
        System.out.println("Parent with the most occurrences: " + $maxParent);
end

function String getMaxParent(List groupedSubjects) {
    String maxParent = null;
    int maxOccurrences = 0;
    for (Object parent : groupedSubjects) {
        String parentString = ((Subject) parent).getParent();
        int occurrences = countOccurrences(groupedSubjects, parentString);
        if (occurrences > maxOccurrences) {
            maxOccurrences = occurrences;
            maxParent = parentString;
        }
    }
    return maxParent;
}

function int countOccurrences(List list, String value) {
    int count = 0;
    for (Object obj : list) {
        if (value.equals(((Subject) obj).getParent())) {
            count++;
        }
    }
    return count;
}