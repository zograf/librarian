package rules;

import com.librarian.model.*;
import java.util.List;
import java.util.Set;

rule "Add points for liked subjects"
agenda-group "main"
salience 90
no-loop
    when
        $rp: RecommendingPreferences($list: up.likedSubjects, $up: up)
        $br: BookRank(userPreferences == $up, $bookList: book.subjects)
    then
        Integer add = calculatePoints($bookList, $list, 10);
        Integer rating = $br.getRating();
        modify($br) { setRating(rating + add) }
end

rule "Add points for additional subjects"
agenda-group "main"
salience 90
no-loop
    when
        $rp: RecommendingPreferences($list: up.additionalSubjects, $up: up)
        $br: BookRank(userPreferences == $up, $bookList: book.subjects)
    then
        Integer add = calculatePoints($bookList, $list, 5);
        Integer rating = $br.getRating();
        modify($br) { setRating(rating + add) }
end

rule "Remove points for disliked subjects"
agenda-group "main"
salience 90
no-loop
    when
        $rp: RecommendingPreferences($list: up.dislikedSubjects, $up: up)
        $br: BookRank(userPreferences == $up, $bookList: book.subjects)
    then
        Integer add = calculatePoints($bookList, $list, -20);
        Integer rating = $br.getRating();
        modify($br) { setRating(rating + add) }
end

function Integer calculatePoints(Set bookSubjects, Set likedSubjects, Integer add) {
    Integer ret = 0;
    for (Object bookSubject : bookSubjects) {
        Subject bs = (Subject) bookSubject;
        for (Object likedSubject : likedSubjects) {
            Subject ls = (Subject) likedSubject;
            if (bs.getId().equals(ls.getId())) {
                    ret += add;
            }
        }
        //if (likedSubjects.contains(bs)) {
        //    ret += 10;
        //}
    }
    //if (ret != 0) {
    //    System.out.println(ret);
    //}
    return ret;
}