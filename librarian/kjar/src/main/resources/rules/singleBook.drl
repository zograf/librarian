package rules;

import com.librarian.model.*;
import java.util.*;
import java.util.List;
import java.util.Set;


// category, fiction
// fiction, horror
// horror, zombie
query isParent(String parent, String keyword)
    eval(parent != null && keyword != null && keyword.equals(parent))
    or
    (sub: Subject(parent, keyword; ) and eval(parent != null && !parent.equals("category")))
    or
    (sub: Subject(x, keyword; ) and isParent(parent, x; ))
end

// Nadjes knjigu recimo Book(Subject s(p1, k1), Subject ss(p2, k2), Subject sss(p3, k3), Subject c)
// isParent(c, $s; )
// $br: BookRank(book.category.keyword == $s)
// then
// dodajPoene()

rule "Add points for category"
agenda-group "singleBook"
salience 10
    when
        $rb: RecommendingBook($c: book.category.parent)
        isParent($c, s; )
        $b: BookRank(book.category.keyword == s)
    then
        Integer r = $b.getRating();
        modify($b) { setRating(r + 5) }
end

// Nadjes knjigu recimo Book(Subject s(p1, k1), Subject ss(p2, k2), Subject sss(p3, k3), Subject c)
// $br: BookRank($s: book.subjects)
// ifIn($s, [s, ss, sss])
// then
// dodajPoene()

rule "Add points for same subjects"
agenda-group "singleBook"
salience 10
    when
        $rb: RecommendingBook($bs: book.subjects)
        $br: BookRank($brs: book.subjects)
    then
        Integer points = calculatePoints($bs, $brs, 5);
        Integer r = $br.getRating();
        modify($br) { setRating(r + points) }
end

rule "Add points for rating"
agenda-group "singleBook"
salience 10
no-loop
    when
        $br: BookRank($id: book.id)
        $ra: Rating(book.id == $id, $r: rating)
    then
        Integer rating = $br.getRating();
        modify($br) { setRating(rating + $r - 3) }
end


rule "Add book ranks"
agenda-group "singleBook"
salience 100
    when
        $b: Book()
    then
        BookRank $bookRank = new BookRank();
        $bookRank.setBook($b);
        $bookRank.setRating(0);
        insert($bookRank);
end